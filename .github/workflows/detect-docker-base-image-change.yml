name: Detect docker base image updates

on:
  schedule:
    - cron: '15 3 * * *'
  workflow_dispatch:


jobs:

  check-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # for Keepalive
    outputs:
      needs-updating: ${{ steps.check.outputs.needs-updating }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Keep repo alive: https://github.com/marketplace/actions/keepalive-workflow
     # - name: Keepalive
     #  uses: gautamkrishnar/keepalive-workflow@v2

      - name: Get Image Names
        id: images
        run: |
          #echo "IMAGE_BASE=caddy:alpine" | tee -a $GITHUB_ENV
          echo "IMAGE_BASE=$(awk '/^FROM/{print $2; exit}' Dockerfile)" | tee -a $GITHUB_ENV
          echo "IMAGE_DERIVED=ghcr.io/${GITHUB_REPOSITORY}:master" | tee -a $GITHUB_ENV


      - name: Check if update available
        id: check
        uses: lucacome/docker-image-update-checker@v2.0.0
        with:
          base-image: ${{ env.IMAGE_BASE }}
          image: ${{ env.IMAGE_DERIVED }}

      # Debug step to see the output
      - name: Debug Output
        run: |
          echo "Differs output: ${{ steps.check.outputs.needs-updating }}"

      - name: Keepalive commit
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          # Crea o aggiorna un file per innescare un commit
          echo "Last run: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" > .github/workflows/last-run.txt
          git add last-run.txt
          git diff --quiet && git diff --staged --quiet || (git commit -m "Keepalive: Workflow run on $(date -u +"%Y-%m-%d")" && git push)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Assicurati che GITHUB_TOKEN sia disponibile  

  call-build:
    needs: check-update
    if: needs.check-update.outputs.needs-updating == 'true'
    secrets: inherit
    uses: ./.github/workflows/build-docker-image.yml
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
